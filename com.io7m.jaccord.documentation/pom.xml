<?xml version="1.0" encoding="UTF-8"?>
<project
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.io7m.jaccord</groupId>
    <artifactId>com.io7m.jaccord</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>

  <artifactId>com.io7m.jaccord.documentation</artifactId>
  <packaging>jar</packaging>

  <name>com.io7m.jaccord.documentation</name>
  <description>Harmony tools (Documentation)</description>
  <url>http://io7m.github.io/jaccord/</url>

  <properties>
    <mdep.analyze.skip>true</mdep.analyze.skip>
  </properties>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>com.io7m.jaccord.chord_names.api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>com.io7m.jaccord.chord_names.vanilla</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>com.io7m.jaccord.core</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>com.io7m.jaccord.cpdsl</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>com.io7m.jaccord.cpdsl.midi</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>com.io7m.jaccord.parser.api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>com.io7m.jaccord.parser.vanilla</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>com.io7m.jaccord.scales.api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>com.io7m.jaccord.scales.spi</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>com.io7m.jaccord.scales.vanilla</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>com.io7m.primogenitor</groupId>
      <artifactId>com.io7m.primogenitor.support</artifactId>
    </dependency>

    <dependency>
      <groupId>org.immutables</groupId>
      <artifactId>value</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.io7m.immutables.style</groupId>
      <artifactId>com.io7m.immutables.style</artifactId>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- Copy documentation resources into build directory -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-documentation-resources</id>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <outputDirectory>${project.build.directory}/documentation/</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/resources/com/io7m/jaccord/documentation/</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Produce documentation -->
      <plugin>
        <groupId>com.io7m.kstructural</groupId>
        <artifactId>io7m-kstructural-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>exec-multi</id>
            <goals>
              <goal>compileXHTML</goal>
            </goals>
            <phase>process-resources</phase>
            <configuration>
              <documentFile>${project.build.directory}/documentation/documentation.sd</documentFile>
              <outputDirectory>${project.build.directory}/documentation/</outputDirectory>
              <pagination>XHTML_MULTI_PAGE</pagination>
              <cssExtraStyles>
                <param>documentation.css</param>
              </cssExtraStyles>
            </configuration>
          </execution>
          <execution>
            <id>exec-single</id>
            <goals>
              <goal>compileXHTML</goal>
            </goals>
            <phase>process-resources</phase>
            <configuration>
              <documentFile>${project.build.directory}/documentation/documentation.sd</documentFile>
              <outputDirectory>${project.build.directory}/documentation/</outputDirectory>
              <pagination>XHTML_SINGLE_PAGE</pagination>
              <cssExtraStyles>
                <param>documentation.css</param>
              </cssExtraStyles>
            </configuration>
          </execution>
          <execution>
            <id>exec-plain</id>
            <goals>
              <goal>compilePlain</goal>
            </goals>
            <phase>process-resources</phase>
            <configuration>
              <documentFile>${project.build.directory}/documentation/documentation.sd</documentFile>
              <outputDirectory>${project.build.directory}/documentation/</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Unpack sources of dependencies -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack-sources</id>
            <phase>package</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <excludes>module-info.java</excludes>
              <includeGroupIds>${project.groupId}</includeGroupIds>
              <classifier>sources</classifier>
              <failOnMissingClassifierArtifact>false</failOnMissingClassifierArtifact>
              <outputDirectory>${project.build.directory}/javadoc-sources</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>make-classpath</id>
            <phase>package</phase>
            <goals>
              <goal>build-classpath</goal>
            </goals>
            <configuration>
              <outputFile>${project.build.directory}/javadoc-classpath</outputFile>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Javadoc handling -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>java</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <mainClass>com.io7m.primogenitor.support.TrivialJavadoc</mainClass>
              <arguments>
                <argument>${project.build.directory}/javadoc-sources</argument>
                <argument>${project.build.directory}/javadoc-classpath</argument>
                <argument>${project.build.directory}/documentation/apidocs</argument>
                <argument>${project.build.directory}/javadoc-log.txt</argument>
                <argument>${project.build.directory}/javadoc-options</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Produce documentation archive -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <descriptors>
            <descriptor>src/main/assembly/documentation.xml</descriptor>
          </descriptors>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <appendAssemblyId>false</appendAssemblyId>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Unpack the documentation archive to the parent's generated site minisite directory. -->
      <!-- This is arguably abusive, but there appears to be no other way to achieve it. -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>truezip-maven-plugin</artifactId>
        <inherited>false</inherited>
        <executions>
          <execution>
            <id>copy-site-documentation</id>
            <goals>
              <goal>copy</goal>
            </goals>
            <phase>site</phase>
            <configuration>
              <verbose>true</verbose>
              <fileset>
                <directory>${project.build.directory}/${project.artifactId}-${project.version}.zip/${project.artifactId}-${project.version}/</directory>
                <outputDirectory>${project.parent.build.directory}/minisite/documentation/</outputDirectory>
              </fileset>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
